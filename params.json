{
  "name": "fileRecorder",
  "tagline": "Lazy version control for your stuff!",
  "body": "[![alt Download Latest Release](https://img.shields.io/badge/download-v0.1.12-blue.svg)](https://github.com/wave2/filerecorder/releases/download/v0.1.12/fileRecorder-v0.1.12.jar) [![GitHub license](https://img.shields.io/badge/license-BSD-blue.svg)](https://raw.githubusercontent.com/wave2/filerecorder/master/LICENSE) [![Build Status](https://travis-ci.org/wave2/filerecorder.svg?branch=master)](https://travis-ci.org/wave2/filerecorder) [![GitHub issues](https://img.shields.io/github/issues/wave2/filerecorder.svg)](https://github.com/wave2/filerecorder/issues)\r\n# fileRecorder\r\n![alt fileRecorder Logo](https://raw.githubusercontent.com/wave2/filerecorder/gh-pages/images/fileRecorderLogo.jpg)\r\n\r\n## Introduction\r\nfileRecorder is a simple wrapper over [GIT](https://git-scm.com/) to allow you to track changes to a folder.\r\n\r\nYou provide 2 folders:\r\n\r\n1. A folder to monitor\r\n2. A folder to record the changes (git repo)\r\n\r\nEach time you run the app, the recorder will compare your folder with the repo, and commit any changes it detects - how lazy is that?!\r\n\r\n## Requirements\r\n * Java 1.8+ *(Stay current for your own sake)*\r\n\r\n## Usage\r\n### Recording\r\nPretty simple really...or you'd be using Git right?\r\n```bash\r\n$ java -jar fileRecorder-v0.1.12.jar -f PATH -r PATH record\r\n```\r\n### Rewinding\r\nToo lazy to use Git? ;)\r\n\r\nAlright, well just run the following commands to get a Zip file containing your files (hope it's not massive!).\r\n\r\n 1. Get a list of the changes and make a note of the commit ID you want to get\r\n\r\n    ```bash\r\n    $ java -jar fileRecorder.v0.1.12.jar -f MONITOR_PATH -r REPO_PATH rewind\r\n    ```\r\n    *Hint: it looks like this - 5bdc5da*\r\n 2. Create a Zip file containing a point in time snapshot of the specified commit ID.\r\n\r\n    ```bash\r\n    $ java -jar fileRecorder.v0.1.12.jar -f MONITOR_PATH -r REPO_PATH rewind [commitID]\r\n    ```\r\n\r\nYou'll have to restore them yourself after that, hmmm that sounds like a feature request.\r\n\r\n## License\r\nCopyright (c) 2016 Wave2 Limited\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nThe views and conclusions contained in the software and documentation are those\r\nof the authors and should not be interpreted as representing official policies,\r\neither expressed or implied, of Wave2 Limited.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}